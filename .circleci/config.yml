  
version: 2.1

slack-fail-post-step: &slack-fail-post-step
  post-steps:
    - slack/status:
        fail_only: true
orbs:
  slack: circleci/slack@4.1.1
  aws-cli: circleci/aws-cli@1.3.0
 
executors:
  node:
    docker:
      - image: circleci/node:13.8.0
  python:
    docker:
      - image: python:3.9.0-alpine
  aws:
    docker:
      - image: amazon/aws-cli

            
jobs:

  build-frontend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: [frontendCache]
      - run:
          name: Build front-end
          command: |
            cd frontend
            sudo npm install webpack-dev-server -g
            sudo npm install
            sudo npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: v2-frontendCache  # -<< pipeline.id >>

  build-backend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: [v2-backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm i
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: v2-backend-build  # -<< pipeline.id >>
      - save_cache:
          paths: [backend/dist]
          key: backend-dist  # -<< pipeline.id >>

  test-frontend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: ["v2-frontendCache"]  # -<< pipeline.id >>"
      - run:
          name: Font-end test
          command: |
            cd frontend
            npm run test

  test-backend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: ["backend-build"]  # -<< pipeline.id >>"
      - run:
          name: Back-end test
          command: |
            cd backend
            npm run test
       
            
  scan-frontend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: ["v2-frontendCache"]  # -<< pipeline.id >>"
      - run:
          name: scan frontend
          command: |
            cd frontend
            npm audit --audit-level=critical
 
  scan-backend:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys: ["v2-backend-build"]  # -<< pipeline.id >>"
      - run:
          name: Back-end security scan
          command: |
            cd backend
            npm install
            npm audit --audit-level=critical          

          
workflows:
  default:
    jobs:
      - build-frontend: *slack-fail-post-step    
      - build-backend: *slack-fail-post-step
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend] 
      - scan-frontend:
          requires: [build-frontend]
      - scan-backend:
          requires: [build-backend]          
